{"ast":null,"code":"var _jsxFileName = \"/Users/yousafishaq/Desktop/React-Challenge/Client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink, from } from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\"; // GraphQl Url\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst errorLink = onError(({\n  graphqlErrors,\n  networkError\n}) => {\n  if (graphqlErrors) {\n    graphqlErrors.map(({\n      message,\n      location,\n      path\n    }) => {\n      alert(`Graphql error ${message}`);\n    });\n  }\n});\nconst link = from([errorLink, new HttpLink({\n  uri: \"http://localhost:8000/graphql\"\n})]);\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link\n});\nReactDOM.render( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 5\n}, this), document.getElementById('root'));\nreportWebVitals();","map":{"version":3,"sources":["/Users/yousafishaq/Desktop/React-Challenge/Client/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","ApolloClient","InMemoryCache","ApolloProvider","HttpLink","from","onError","errorLink","graphqlErrors","networkError","map","message","location","path","alert","link","uri","client","cache","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,IALF,QAMO,gBANP;AAOA,SAASC,OAAT,QAAwB,2BAAxB,C,CAEA;;;AAEA,MAAMC,SAAS,GAAGD,OAAO,CAAC,CAAC;AAAEE,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KAAqC;AAC7D,MAAID,aAAJ,EAAmB;AACjBA,IAAAA,aAAa,CAACE,GAAd,CAAkB,CAAC;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA;AAArB,KAAD,KAAiC;AACjDC,MAAAA,KAAK,CAAE,iBAAgBH,OAAQ,EAA1B,CAAL;AACD,KAFD;AAGD;AACF,CANwB,CAAzB;AAQA,MAAMI,IAAI,GAAGV,IAAI,CAAC,CAChBE,SADgB,EAEhB,IAAIH,QAAJ,CAAa;AAAEY,EAAAA,GAAG,EAAE;AAAP,CAAb,CAFgB,CAAD,CAAjB;AAKA,MAAMC,MAAM,GAAG,IAAIhB,YAAJ,CAAiB;AAC9BiB,EAAAA,KAAK,EAAE,IAAIhB,aAAJ,EADuB;AAE9Ba,EAAAA,IAAI,EAAEA;AAFwB,CAAjB,CAAf;AAKAjB,QAAQ,CAACqB,MAAT,eACI,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAEF,MAAxB;AAAA,yBACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADJ,EAGuBG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHvB;AAMArB,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  HttpLink,\n  from,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\n\n// GraphQl Url\n\nconst errorLink = onError(({ graphqlErrors, networkError }) => {\n  if (graphqlErrors) {\n    graphqlErrors.map(({ message, location, path }) => {\n      alert(`Graphql error ${message}`);\n    });\n  }\n});\n\nconst link = from([\n  errorLink,\n  new HttpLink({ uri: \"http://localhost:8000/graphql\" }),\n]);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link,\n});\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <App/>\n    </ApolloProvider>, document.getElementById('root')\n);\n\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}